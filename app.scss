$primary-color: orange;


/****** Data Types ********/

// null
$i-am-null: null;

// Boolean
$i-am-false: false;
$i-am-true: true;

// Number
$number: 36px;

// Strings
$name: 'Abdul Wahab';
$name-together: 'Abdul ' + 'Wahab';

// Color
$bg-color: darken(white, 95%); // Builtin Function
$venus: #556644;

/****** End Data Types ********/


/******* Operators ************/

h1{
  font-size: 14px + 2;
}
h2 {
  font-size: 18px - 2;
}
h3 {
  font-size: (60/2);
  opacity: random(4) / 5;
  padding-right: 2px / 4px + 3px;
}
h4 {
  width: 3px * 5 + 5px;
  width: 3 * (5px + 5px);
  width: 3px + (6px / 2) * 3;
}

/* Equality Operator ->    ==, != */

@mixin font-fl($font) {
  &:after {
    @if (type-of($font) == string) {
      content: ' My font is #{$font}.';
    }
    @elseif (type-of($font) != false) {
      content: ' My font is a number.';
    }
    @else {
      content: ' Sorry, the argument #{$font} is a #{type-of($font)}.';
    }
  }
}

h2 {
  @include font-fl(sans-serif);
}
h3 {
  @include font-fl(7);
}

/* Comparison Operator ->     ==, <=, >=, != */
$padding: 50px;
h2 {
  @if ($padding <= 20) {
    padding: $padding;
  }
  @else {
    padding: $padding / 2;
  }
}

/* Logical Operator ->    and, or */
$var1: "foo";
$var2: "bar";

@mixin varcheck(){
    &:after {
      @if $var1 == "foo" and $var2 == "br" {
        content: 'Var1 and Var2 are true';
      }
      @else {
        content: 'Both or One of these is false';
      }
    }
}
h5 {
  @include varcheck();
}


/* String Operations */
$first-name: 'Abdul';
$last-name: 'Wahab';

@mixin string-concat() {
  &:after {
    content: "Your name is: " + $first-name + " " + $last-name;
  }
}

h6 {
  @include string-concat();
}

/* Color Operations */
h1 {
  // Alpha valuse must be same for both operands.
  color: rgba(70, 132, 153, 1) + rgba(32, 68, 121, 1);
}
h2 {
  // must be in captial letters
  color: #DC143C + #B0171F;
}

/******* End Operators *******/


/******** Parent Child Selector ->    &   *******/
.btn {
  &:hover { color: white;}
  &:visited { color: white;}
  &:active { color: white;}
}

.btn {
  & > span { color : white; }
  & + span { color : white; }
  & ~ span { color : white; }
}

.btn {
  &-primary { color : white; }
  &-secondary { color : white; }
}

.btn {
  body.page & { color : white; }
}

/******* End Parent Child Selector ****/

/********* Interpolation ->    #{$font} ******/

@mixin font-fl($font) {
  &:after {
    @if (type-of($font) == string) {
      content: ' My font is #{$font}.';
    }
    @elseif (type-of($font) != false) {
      content: ' My font is a number.';
    }
    @else {
      content: ' Sorry, the argument #{$font} is a #{type-of($font)}.';
    }
  }
}

h2 {
  @include font-fl(sans-serif);
}

/******** End Interpolation ****/

body {
  color: $primary-color;
  font-size: $number;
  background-color: $bg-color;
}
body::after {
  content: $name-together;
  background-color: $venus;
}
